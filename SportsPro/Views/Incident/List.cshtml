@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model X.PagedList.IPagedList<Incident>
@{
    ViewBag.Title = "Incident Manager";
     
    string selectedNAV(string selected)
    {
        string currentAction = ViewContext.RouteData.Values["action"].ToString();
        return (selected == currentAction) ? "active" : "";
    }
}

<h1>@ViewBag.Title</h1>

<div class="mb-4 d-flex justify-content-between">
    <a class="btn btn-outline-primary" asp-controller="Incident" asp-action="Add">Add Incident</a>

    <form method="get" asp-action="List" asp-controller="Incident" class="w-50">
        <div class="input-group">
            <input type="text" class="form-control me-1" name="search" value="@ViewBag.search" placeholder="Search...">
            <button class="btn btn-outline-primary" type="submit">Search</button>
        </div>
    </form>
</div>

<ul class="nav nav-pills mb-2">
    <li class="nav-item">
        <a class="btn btn-outline-primary  @(HttpContextAccessor.HttpContext.Request.Query.Count == 0 ? "active" : "")" 
            asp-action="List" 
            asp-controller="Incident">
            All Incidents
        </a>
    </li>

    <li class="nav-item mx-2">
        <a class="btn btn-outline-primary @(HttpContextAccessor.HttpContext.Request.Query["unassigned"] == "true" ? "active" : "")" 
            asp-action="List" 
            asp-controller="Incident" 
            asp-route-unassigned="true">
            Unassigned Incidents
        </a>
    </li>

    <li class="nav-item">
        <a class="btn btn-outline-primary  @(HttpContextAccessor.HttpContext.Request.Query["open"] == "true" ? "active" : "")" 
            asp-action="List" 
            asp-controller="Incident" 
            asp-route-open="true">
            Open Incidents
        </a>
    </li>
</ul>

@if (Model.Count > 0)
{
    @foreach (Incident i in Model)
    {
        <div class="card shadow mb-3">
            <div class="card-body">
                <h5 class="card-title">@i.Title</h5>
                <p class="card-text">Customer: @i.Customer?.FullName</p>
                <p class="card-text">Product: @i.Product?.Name</p>
                <p class="card-text">Date Opened: @i.DateOpened</p>
                @* show the date closed if it was closed *@
                @if (i.DateClosed != null)
                {
                    <p class="card-text">Date Closed: @i.DateClosed</p>
                }
                @* show the technician if it was assigned *@
                @if (i.TechnicianID != null)
                {
                    <p class="card-text">Technician: @i.Technician.FirstName @i.Technician.LastName</p>
                }
                else
                {
                    <p class="card-text">Technician: Unassigned</p>
                }
                <div class="d-flex justify-content-end">
                    <a href="@Url.Action("Edit", "Incident", new { id = i.IncidentID })" class="btn btn-primary mx-1">Edit</a>
                    <form method="post" asp-action="Delete" asp-controller="Incident" id="deleteIncident_@i.IncidentID" onsubmit="deleteIncident(event, @i.IncidentID)">
                        <input hidden asp-for="@i.IncidentID" name="incidentID" value="@i.IncidentID"/>
                        <button class="btn btn-outline-danger" type="submit">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    }
}
else
{
    <h4 class="my-4 text-center">No Incidents...</h4>    
}

@* only show the pagination when there is more than 1 page *@
@if (Model.PageCount > 1)
{
    <div class="">
        <nav aria-label="Page navigation" class="d-flex justify-content-center">
            <ul class="pagination">
                @for (var i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                        <a class="page-link" href="@Url.Action("List", "Incident", new {page = i, search = ViewBag.search})">@i</a>
                    </li>
                }
            </ul>
        </nav>
    </div>    
}

@section Scripts{
    <script>
        function deleteIncident(event, incidentID) { 
            event.preventDefault();

            Swal.fire({
                title: "Are you sure you want to delete this incident?",
                icon:'question',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it'
            }).then(result => {
                if (result.isConfirmed) {
                    // submit the form
                    document.getElementById('deleteIncident_' + incidentID).submit();
                }
            });
        }
    </script>
}
